name: "Market"

on:
  - push

env:
  owner: "zmarket"

jobs:
  build:
    if: ${{ github.repository_owner == 'zbox' }}
    runs-on: ubuntu-latest
    name: "Build"
    steps:
      - name: "Get repository name"
        shell: bash
        run: |
          echo "repo_name=$( echo '${{ github.repository }}' | awk -F '/' '{ print $2 }' )" >> $GITHUB_ENV
      - name: "Get package OS"
        shell: bash
        run: |
          echo "pkg_os=$( echo '${{ github.repository }}' | awk -F '[/-]' '{ print $2 }' )" >> $GITHUB_ENV
      - name: "Get package name"
        shell: bash
        run: |
          echo "pkg_name=$( echo '${{ github.repository }}' | awk -F '${{ env.pkg_os }}-' '{ print $2 }' )" >> $GITHUB_ENV
      - name: "Create repository"
        shell: bash
        run: |
          http="$( curl -s -o '/dev/null' -I -w '%{http_code}' -A 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36' '${{ github.server_url }}/${{ env.owner }}/${{ env.repo_name }}' )"
          if [[ "${http}" -ne 200 ]]; then
            curl -X POST \
            -H 'Authorization: Bearer ${{ secrets.BOT_GITHUB_TOKEN }}' \
            -H 'Accept: application/vnd.github+json' \
            -A 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36' \
            '${{ github.api_url }}/orgs/${{ env.owner }}/repos' \
            -d '{"name":"${{ env.repo_name }}","private":false,"has_issues":false,"has_projects":false,"has_wiki":false}'
          fi
      - name: "Build package"
        uses: ghastore/build-debian@main
        with:
          git_repo_src: "${{ github.server_url }}/${{ github.repository }}.git"
          git_repo_dst: "${{ github.server_url }}/${{ env.owner }}/${{ env.repo_name }}.git"
          git_user: "${{ secrets.BOT_GITHUB_NAME }}"
          git_email: "${{ secrets.BOT_GITHUB_EMAIL }}"
          git_token: "${{ secrets.BOT_GITHUB_TOKEN }}"
          obs_user: "${{ secrets.OBS_USER }}"
          obs_password: "${{ secrets.OBS_PASSWORD }}"
          obs_token: "${{ secrets.OBS_TOKEN }}"
          obs_project: "home:${{ env.owner }}:${{ env.pkg_os }}"
          obs_package: "${{ env.pkg_name }}"
